/// @access private
/// @param {Boolean} $inverse - Whether or not to output inverse styling for toggle
/// @param {Boolean} $inline-label Whether to output entire element inline with its label
/// @output styles for toggle based on a checkbox input
@mixin _oFormsToggle($inverse: null, $inline-label: null) {
	.o-forms--toggle {
		$toggle-spacing: oTypographySpacingSize(1) / 2; // to align text to pseudo elements
		$toggle-width: oTypographySpacingSize(10);

		label span {
			display: inline-block;
			padding: $toggle-spacing 0 $toggle-spacing oTypographySpacingSize(8);
			vertical-align: top;

			&:before,
			&:after {
				content: '';
				cursor: pointer;
				position: absolute;
				top: 0;
				left: 0;
			}

			&:before {
				background-color: _oFormsGet('default-text');
				border-radius: $toggle-width;
				height: 24px;
				width: $toggle-width;
			}

			&:after {
				background-color: oColorsGetColorFor(page, background);
				border: $toggle-spacing solid _oFormsGet('default-text');
				border-radius: 50%;
				box-sizing: border-box;
				height: 24px;
				width: 24px;
				transition: left 75ms ease-in-out;
			}
		}

		@include oGridRespondTo(S) {
			label:first-of-type {
				margin: 12px 0;
			}
		};

		input[type=checkbox] { // sass-lint:disable-line no-qualifying-elements
			cursor: pointer;
			position: relative;
			left: 12px;

			&:checked {
				+ span:after {
					left: 16px;
				}
			}
		}

		@if $inline-label {
			&.o-forms--inline {
				@include _oFormsInlineLabel($fieldset: true);
			}
		}
	}

	@if $inverse {
		@include _oFormsToggleInverse();
	}


}

/// @access private
/// @output styles for inverse toggle based on a checkbox input
@mixin _oFormsToggleInverse {
	.o-forms--toggle--inverse {
		span {
			color: _oFormsGet('toggle-inverse-base');
		}

		.o-forms__prompt {
			color: rgba(_oFormsGet('toggle-inverse-base'), 0.7);
		}

		label span {
			&:before {
				background-color: _oFormsGet('toggle-inverse-base');
			}

			&:after {
				background-color: _oFormsGet('toggle-inverse-knob');
				border-color: _oFormsGet('toggle-inverse-base');
			}
		}

		input[type=checkbox]:checked { // sass-lint:disable-line no-qualifying-elements
			+ span:before {
				background-color: _oFormsGet('toggle-inverse-selected');
			}

			+ span:after {
				border-color: _oFormsGet('toggle-inverse-selected');
			}
		}
	}
}
