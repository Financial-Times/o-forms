/// @access private
/// @param {Boolean} $disabled Whether to output disabled state styling
/// @param {Boolean} $invalid Whether to output invalid state styling
/// @param {Boolean} $right Whether to display checkbox to the right of text
/// @output Styling for text inputs
@mixin _oFormsCheckbox(
	$disabled: null,
	$invalid: null,
	$right: null
) {
	$element: 'input[type=checkbox]';

	.o-forms-input--checkbox {
		@if $invalid {
			.o-forms-input__error {
				@include oTypographyMargin($top: 2);
			}
		}

		#{$element} { // sass-lint:disable-line no-qualifying-elements
			@include _oFormsControlsBase($disabled);
		}

		@if $right {
			.o-forms-input__right {
				display: inline-block;
	
				#{$element} { // sass-lint:disable-line no-qualifying-elements
					right: 0;
				}
	
				.o-forms-input__label {
					padding-left: 0;
					padding-right: 34px;
	
					&:before,
					&:after {
						right: 0;
						left: unset;
					}
				}
			}
		}

		.o-forms-input__label {
			display: inline-block;
			padding: 2px 0 0 34px;
			vertical-align: top;

			&:before {
				@include _oFormsControlsPseudoElements();
				border: 1px solid _oFormsGet('default-border');
				background-color: _oFormsGet('default-background');
			}

			&:after {
				@include _oFormsControlsPseudoElements();
				@include oIconsGetIcon('tick', _oFormsGet('controls-checked-base'), 24px);
				background-color: _oFormsGet('controls-base');
				opacity: 0;
				transition: opacity 0.1s ease;
			}

			// this handles spacing between two input__label spans for the same input element, 
			// which is necessary in the case of 'additional content'
			& + .o-forms-input__label {
				padding-top: 12px; 
			}
		}
	}

}
