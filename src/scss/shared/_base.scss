/// @access private
/// @output Shared base state styles for all form elements.
@mixin _oFormsBase {
	@include _oFormsTypography();
	@include _oFormsRequired();
	@include _oFormsField();

	.o-forms-input {
		@include oTypographyMargin($top: 3);
	}
}

/// @access private
/// @output Shared base state styles for all form fields.
@mixin _oFormsField() {
	.o-forms-field {
		@include oTypographyMargin($bottom: 5);
		display: flex;
		flex-direction: column;

		label {
			display: block;
			margin: 0 0 12px;
			position: relative;
		}

		label:last-of-type {
			@include oTypographyMargin($bottom: 0);
		}
	}
}

/// @access private
/// @output styles for inverse toggle based on a checkbox input
@mixin _oFormsInverse {
	.o-forms-field--inverse {
		color: _oFormsGet('toggle-inverse-base');

		.o-forms-title {
			.o-forms-title--main:after,
			.o-forms-title--prompt {
				color: rgba(_oFormsGet('toggle-inverse-base'), 0.7);
			}
		}

		.o-forms-input__label:before {
			background-color: _oFormsGet('toggle-inverse-base');
		}

		.o-forms-input__label:after {
			background-color: _oFormsGet('toggle-inverse-knob');
			border-color: _oFormsGet('toggle-inverse-base');
		}

		input[type=checkbox]:checked { // sass-lint:disable-line no-qualifying-elements
			+ .o-forms-input__label:before {
				background-color: _oFormsGet('toggle-inverse-selected');
			}

			+ .o-forms-input__label:after {
				border-color: _oFormsGet('toggle-inverse-selected');
			}
		}
	}
}
