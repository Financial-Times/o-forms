////
/// @group o-forms
/// @link http://registry.origami.ft.com/components/o-forms
////

/// Common field styles
@mixin oFormsCommonFieldBase {
	box-sizing: border-box;
	width: 100%;
	max-width: $_o-forms-field-max-width;
	height: $_o-forms-field-default-height;
	margin: 0;
	padding: $_o-forms-field-default-padding-top $_o-forms-field-default-padding-leftright $_o-forms-field-default-padding-bottom;
	border: $_o-forms-field-border;
	border-radius: $_o-forms-field-border-radius;
	background-color: oColorsGetColorFor(o-forms-field-standard, background);
	background-clip: padding-box;
	color: oColorsGetColorFor(o-forms-field-standard, text);
	font-family: $o-forms-font-family;
	font-size: $_o-forms-field-default-font-size;
	outline: none;
	transition: 0.15s box-shadow ease-in;

	// sass-lint:disable no-vendor-prefixes
	-moz-appearance: none;
	-webkit-appearance: none;
	// sass-lint:enable no-vendor-prefixes

	&:focus {
		@include oFormsCommonFieldFocus;
	}

	&:disabled {
		@include oFormsCommonFieldDisabled;
	}
}

/// Common field styles: focused state only
@mixin oFormsCommonFieldFocus {
	@include oColorsFor(o-forms-field-focus);
	box-shadow: inset 0 0 4px 1px rgba(oColorsGetColorFor(o-forms-focus-ring, border), 0.7);
}

/// Common field styles: disabled state
@mixin oFormsCommonFieldDisabled {
	@include oColorsFor(o-forms-field-disabled);
	cursor: default;
	color: #afafaf;
}

/// Common field styles: invalid state
@mixin oFormsCommonFieldInvalid {
	@include oColorsFor(o-forms-field-invalid);

	&:focus {
		box-shadow: inset 0 0 4px 1px rgba(oColorsGetColorFor(o-forms-field-invalid, border), 0.3);
	}
}

/// Common field styles: valid state
@mixin oFormsCommonFieldValid {
	border-color: oColorsGetColorFor(o-forms-field-valid, border);
}

/// Common field styles: small
@mixin oFormsCommonSmall {
	height: $_o-forms-field-small-height;
	padding-top: 0;
	padding-bottom: 0;
	background-size: $_o-forms-select-small-iconsize;
	line-height: $_o-forms-field-small-height - ($_o-forms-field-border-width * 2);
}


/// Group styles
@mixin oFormsGroup {
	position: relative;
	max-width: $_o-forms-field-max-width;
	margin: 0 0 20px; // Reset top and side margins for fieldset usage
	// reset <fieldset> defaults
	padding: 0;
	border: 0;

	// sass-lint:disable mixins-before-declarations
	@include _oFormsBreakpoint {
		padding-right: $_o-forms-padding;
		padding-left: $_o-forms-padding;
	}
	// sass-lint:enable mixins-before-declarations

	&--wide {
		@include oFormsFullWidth;
	}
}

/// All the field to extend to the full width
/// of the container
@mixin oFormsFullWidth() {
	// sass-lint:disable no-important
	max-width: none !important;
	// sass-lint:enable no-important
}

/// Target styles at Internet Explorer 8 only
@mixin _oFormsTargetIE8 {
	@media \0screen {
		@content;
	}
}

/// Target both IE8 and modern browsers at the breakpoint
/// Useful for layout changes at the Small breakpoint
@mixin _oFormsBreakpoint {
	@include oGridRespondTo(S) {
		@content;
	}
	@include oGridTargetIE8 {
		@content;
	}
}

// From: https://css-tricks.com/snippets/sass/str-replace-function/
/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}
