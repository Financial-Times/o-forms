/// @access private
/// @param {Boolean} $disabled Whether to output disabled state styling
/// @param {Boolean} $inline-label Whether to output entire element inline with its label
/// @param {Boolean} $invalid Whether to output invalid state styling
/// @output Styling for box-styled radio inputs
@mixin _oFormsRadioBox(
	$disabled: null,
	$inline-label: null,
	$invalid: null
) {
	.o-forms--radio--box {
		@include oFormsRadioBoxInputStyles();

		section {
			@include _oFormsBoxSectionBase();
		}

		label {
			@include _oFormsBoxControlsBase();

			&:not(:first-of-type) span {
				border-left: 1px solid _oFormsGet('default-border');
			}

			span {
				padding: 6px 0;
				position: absolute;
				top: 0;
				bottom: 0;
				left: 0;
				right: 0;
				transition: 0.3s background-color, 0.15s color ease-out;
			}
		}

		input[type=radio] {
			clip-path: inset(0px 0px 0px 0px);
			height: 1px;
			width: 1px;

			@if $disabled {
				&:disabled + span {
					cursor: default;
					opacity: 0.4;
				}
			}
		}

		@if $inline-label {
			&.o-forms--inline {
				@include _oFormsInlineLabel($fieldset: true);
			}
		}

		@if $invalid {
			&.o-forms--invalid section {
				border: 1px solid _oFormsGet('invalid-base');
			}
		}
	}
}

@mixin oFormsRadioBoxInputStyles($theme: null) {
	$theme: _oFormsThemeToBrandVariants($theme);

	input[type=radio] {
		& + span {
			color: _oFormsGet('controls-base', $from: $theme);
		}

		&:not(:checked):not(:disabled):hover + span {
			background-color: rgba(_oFormsGet('controls-base', $from: $theme), 0.15);
		}

		&:checked + span {
			background-color: _oFormsGet('controls-base', $from: $theme);
			color: _oFormsGet('controls-checked', $from: $theme);

			&.o-forms--radio--button--negative {
				background-color: _oFormsGet('controls-negative-checked-background', $from: $theme);
			}
		}
	}
}
