@mixin commonField() {
	box-sizing: border-box;
	appearance: none;
	margin: 0;
	border: $_o-forms-fieldborder;
	border-radius: $_o-forms-field-borderradius;
	padding: $_o-forms-field-default-padding-top $_o-forms-field-default-padding-leftright $_o-forms-field-default-padding-bottom;
	width: 100%;
	background-color: oColorsGetColorFor(o-forms-field-standard, background);
	color: oColorsGetColorFor(o-forms-field-standard, text);
	font-family: $o-forms-font-family;
	font-size: $_o-forms-field-default-fontsize;
	outline: none;
}

@mixin commonFieldFocus() {
	border-color: oColorsGetColorFor(o-forms-field-hover, border);
}

@mixin commonFieldDisabled() {
	@include oColorsFor(o-forms-field-disabled);
}

@mixin oFormsClass($classes...) {
	$aggregatedSelector: ();
	@each $class in $classes {
		$aggregatedSelector: append($aggregatedSelector, #{'%#{$class}'}, comma);
		@if (not $o-forms-is-silent) {
			$aggregatedSelector: append($aggregatedSelector, #{'.#{$class}'}, comma);
		}
	}
	#{$aggregatedSelector} {
		@content;
	}
}

/// Creates a ruleset from the content for one or more placeholders
/// And optionally a set of selectors
/// @param {String} $placeholder One or more placeholders, separated by commas
/// @param {String} $selector Zero or more selectors, separated by commas
@mixin oFormsPlaceholderOptionalSelector($placeholder, $selector) {
	$aggregatedSelector: (unquote($placeholder));
	@if (not $o-forms-is-silent) {
		$aggregatedSelector: append($aggregatedSelector, #{$selector}, comma);
	}
	#{$aggregatedSelector} {
		@content;
	}
}
